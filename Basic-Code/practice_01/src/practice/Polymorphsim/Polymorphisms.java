package practice.Polymorphsim;

/*
 * 代码中体现多态性，其实就是一句话，父类引用指向子类对象
 * 格式：
 * 父类名称 对象名 = new 子类名称();
 * 或者
 * 接口名称 实现对象名 = new 实现类名称();
 *
 * 多态中成员变量的使用特点：
 * 访问成员变量的两种方法：(成员变量不可以覆盖重写)
 * 直接通过对象名访问成员变量：等号左边是谁，优先用谁，没有则向上找
 * 间接通过成员方法访问：看该方法属于谁，没有则向上找
 *
 *在多态代码中，成员方法的访问规则是：
 * 看new的是谁，就优先选谁，没有则向上找
 * 口诀：编译看左边，运行看右边
 *
 * 如何知道父类的对象本来是什么子类：(对象向下转型时防止错误)
 * 格式：
 * 对象 instanceof 类名称；
 * 这将得到一个boolean值结果，也就是判断前面的对象能不能当做后面类型的实例；
 *
 * */

public class Polymorphisms {
    public static void main(String[] args) {
        //使用多态的写法
        //左侧父类的引用指向了右侧子类的对象
        Father obj = new Son();

        obj.Method1();
        obj.Method2();

        System.out.println(obj.num);//优先使用等号左边的成员你变量，也就是父类的成员变量
    }
}
